{"version":3,"sources":["components/Header/button.js","components/Context/MyContext.js","components/Header/Header.js","components/Footer/Footer.js","components/FriendCard/FriendCard.js","components/StillCard/StillCard.js","components/Title/Title.js","components/Wrapper/Wrapper.js","DB/db.js","components/Provider/MyProvider.js","App.js","index.js"],"names":["Button","props","react_default","a","createElement","className","onClick","e","startOver","children","MyContext","React","createContext","StyleSheet","header","padding","background","textAlign","marginBottom","Header","Context_MyContext","Consumer","context","style","height","display","paddingRight","myGameState","lowScore","fontSize","Header_button","score","paddingLeft","wrong","Footer","position","bottom","left","FriendCard","maxHeight","width","paddingTop","backgroundSize","backgroundPosition","backgroundClip","alt","name","src","image","top","StillCard","reset","animation","backgroundColor","hidden","disableAll","cardClickHandler","id","Title","Wrapper","components_Title_Title","friends","map","friend","userSelected","components_FriendCard_FriendCard","key","components_StillCard_StillCard","matched","allDisabled","lib","fixedFooter","justifyContent","chosen","config","apiKey","process","API_KEY","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","firebase","initializeApp","jjdb","database","ref","MyProvider","state","guesses","componentDidMount","_this","getLowScore","friendsX2","duplicFriends","shakeImgs","setState","shuffleArray","$","modal","onCloseStart","resetImgs","updateLowScore","callback","on","snapshot","val","orderByChild","once","then","forEach","childSnapshot","child","set","Object","objectSpread","console","log","newArray","i","length","j","Math","floor","random","_ref","concat","index","handleGuesses","removeMatch","setTimeout","_this2","this","Provider","value","preventDefault","friendIndex","findIndex","_this2$state$friends$","origFriends","Component","App","Provider_MyProvider","components_Header_Header","components_Wrapper_Wrapper","components_Footer_Footer","href","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5cf40e5f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <button className=\"btn btn-small black\" onClick={(e)=> props.startOver(e)}>{props.children}</button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from \"react\";\r\n\r\nconst MyContext = React.createContext();\r\n\r\nexport default MyContext;","import React from \"react\";\r\n\r\nimport Button from \"./button\";\r\nimport MyContext from \"../Context\"\r\n\r\nimport \"./Header.css\";\r\n\r\nconst StyleSheet = {\r\n    header: {\r\n        padding: \"1rem 6rem 0\",\r\n        background:\"silver\",\r\n        textAlign: \"center\",\r\n        marginBottom: 0,\r\n        // display: \"-webkit-inline-box\",\r\n        // width: \"100%\"\r\n    }\r\n}\r\n\r\nconst Header = () => (\r\n    <MyContext.Consumer>\r\n        {context => \r\n            <nav style={{height: \"160px\"}}>\r\n                <div className=\"nav-wrapper\" style={StyleSheet.header}>\r\n                    <ul className=\"left\">\r\n                        <li style={{display: \"grid\",paddingRight:\"10px\"}}>Low Score<button className=\"btn-floating btn-large black\">{context.myGameState.lowScore}</button></li>\r\n                    </ul>\r\n                    <p className=\"brand-logo center\" style={{fontSize: \"4rem\"}}>Memory<br></br><Button startOver={context.startOver}>Start Again</Button></p>\r\n                    <ul className=\"right\">\r\n                        <li style={{display: \"grid\",paddingRight:\"10px\"}}>Score<button className=\"btn-floating btn-large blue\">{context.myGameState.score}</button></li>\r\n                        <li style={{display: \"grid\",paddingLeft:\"10px\"}}>Wrong<button className=\"btn-floating btn-large red\">{context.myGameState.wrong}</button></li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        }\r\n    </MyContext.Consumer>\r\n)\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <div className=\"footer-copyright\" style={{height: \"80px\",position: \"relative\",background: \"silver\"}}>\r\n            <div className=\"container\" style={{position: \"absolute\",bottom: 0,left: \"5%\"}}>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from \"react\";\r\nimport \"./FriendCard.css\";\r\n\r\nconst FriendCard = props => (\r\n  <div className=\"card small\">\r\n    <div className=\"card-image\" style={{maxHeight: \"100%\"}}>\r\n      <img className=\"friendImg\" style={{width: \"100%\",maxHeight: \"280px\",paddingTop: \"40px\",backgroundSize: \"cover\",backgroundPosition: \"50%\",backgroundClip: \"content-box\"}} alt={props.name} src={props.image} />\r\n      <span className=\"card-title black-text\" style={{top: 0,padding: \"12px\",width: \"100%\",textAlign: \"center\",fontSize:\"1rem\"}}>{props.name}</span>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default FriendCard;\r\n","import React from \"react\";\r\nimport \"./StillCard.css\";\r\n\r\nconst winner = \"./check-mark-1292787_1280.png\"\r\n\r\nconst StillCard = props => (\r\n  <div style={props.reset ? {animation: \"shake 0.7s\"} : {animation: \"none\"}} className=\"card z-depth-5 small\">\r\n    <button style={{padding: 0,backgroundColor: \"transparent\"}} onClick={props.hidden || props.disableAll ? () => null : (e) => props.cardClickHandler(e,props.id)}>\r\n      <div className=\"card-image\" style={{maxHeight: \"100%\"}}>\r\n        <img className=\"stillImg\" style={{width: \"100%\", backgroundSize: \"cover\",backgroundPosition: \"50%\",backgroundClip: \"content-box\",height: \"210px\"}} alt={props.name} src={props.hidden ? winner : props.image} />\r\n      </div>\r\n    </button>\r\n  </div>\r\n);\r\n\r\nexport default StillCard;\r\n","import React from \"react\";\r\nimport \"./Title.css\";\r\n\r\nconst Title = props => <h1 className=\"title\">{props.children}</h1>;\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nimport {Modal} from 'react-materialize';\r\n\r\nimport FriendCard from \"../FriendCard\";\r\nimport StillCard from \"../StillCard\";\r\nimport Title from \"../Title\";\r\nimport MyContext from \"../Context\";\r\n\r\nconst winText = \"You have a Match!\";\r\nconst still = \"./Fortnite/BN-XN.jpg\";\r\n\r\nconst Wrapper = () => (\r\n    <MyContext.Consumer>\r\n        {context => (\r\n            <div className=\"wrapper\">\r\n                <Title>{context.myGameState.score !== 12 ? \"Find a Fortnite Match!\" : \"You won!\" }</Title>\r\n                {context.myGameState.friends.map(friend => (\r\n                friend.userSelected ? \r\n                <FriendCard\r\n                    // cardClickHandler={context.cardClickHandler}\r\n                    id={friend.id}\r\n                    key={friend.id}\r\n                    name={friend.name}\r\n                    image={friend.image}\r\n                /> :\r\n                <StillCard\r\n                    cardClickHandler={context.cardClickHandler}\r\n                    id={friend.id}\r\n                    key={friend.id}\r\n                    name={friend.name}\r\n                    image={still}\r\n                    hidden={friend.matched}\r\n                    reset={context.myGameState.reset}\r\n                    disableAll={context.myGameState.allDisabled}\r\n                />\r\n                ))}\r\n                <Modal id=\"modal1\" header={winText} fixedFooter><br></br>\r\n                <div style={{display: \"flex\", justifyContent: \"space-evenly\"}}>\r\n                { context.myGameState.chosen.map(friend => (\r\n                    <FriendCard\r\n                    id={friend.id}\r\n                    key={friend.id}\r\n                    name={friend.name}\r\n                    image={friend.image}\r\n                    />\r\n                ))\r\n                }\r\n                </div>\r\n                </Modal>\r\n            </div>\r\n        )}\r\n    </MyContext.Consumer>\r\n)\r\nexport default Wrapper;\r\n","import firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\n// The database config for my Firebase acct\r\nconst config = {\r\n    apiKey: process.env.API_KEY,\r\n    authDomain: \"projectcodingcamp.firebaseapp.com\",\r\n    databaseURL: \"https://projectcodingcamp.firebaseio.com\",\r\n    projectId: \"projectcodingcamp\",\r\n    storageBucket: \"projectcodingcamp.appspot.com\",\r\n    messagingSenderId: \"277978229879\"\r\n  };\r\n  \r\n// Inititalize the database\r\nfirebase.initializeApp(config);\r\n\r\n// Assign my database ref for folder TrainScheduler to a variable\r\nconst db = firebase.database();\r\nconst jjdb = db.ref(\"Memory\");\r\n\r\nexport default jjdb;","import React,{Component} from \"react\"; \r\n\r\nimport MyContext from \"../Context\";\r\nimport friends from \"../../friends.json\";\r\n\r\nimport jjdb from \"../../DB/db.js\";\r\n\r\ndeclare var $ : any; \r\n\r\nclass MyProvider extends Component {\r\n    \r\n    state = {\r\n        friends: friends,\r\n        score: 0,\r\n        wrong: 0,\r\n        guesses: 0,\r\n        chosen: [],\r\n        allDisabled: false,\r\n        reset: false,\r\n        lowScore: \"-\"\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        this.getLowScore(() => {\r\n            const friendsX2 = this.duplicFriends(friends);\r\n            this.shakeImgs(() => this.setState({\r\n                    friends: this.shuffleArray(friendsX2)\r\n                },\r\n                () => $('#modal1').modal({\r\n                    onCloseStart: () => this.setState({\r\n                            chosen: []\r\n                        },\r\n                        () => {\r\n                            this.resetImgs();\r\n                            if (this.state.score === 12 && (this.state.wrong < this.state.lowScore)) {\r\n                                this.setState({\r\n                                    lowScore: this.state.wrong\r\n                                }, () => this.updateLowScore());\r\n                            }\r\n                        }\r\n                    )\r\n                })\r\n            ));\r\n        });\r\n    }\r\n\r\n    getLowScore = (callback) => {\r\n        jjdb.on(\"child_added\", (snapshot) => {\r\n            this.setState({\r\n                lowScore: snapshot.val().score\r\n            });\r\n        });\r\n        callback();\r\n    }\r\n\r\n    updateLowScore = () => {\r\n        jjdb.orderByChild('score').once('value').then((snapshot) => {\r\n            snapshot.forEach((childSnapshot) => {\r\n                jjdb.child(childSnapshot.key).set({\r\n                    score: this.state.lowScore\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    shakeImgs = (callback) => {\r\n        this.setState({\r\n            reset: true\r\n        });\r\n        callback();\r\n    }\r\n\r\n    resetImgs = () => {\r\n        this.setState({\r\n            friends: this.state.friends.map((friend) => {\r\n                friend = {\r\n                    ...friend,\r\n                    userSelected: false\r\n                }\r\n                return friend\r\n            }),\r\n            allDisabled: false\r\n        }, () => console.log(this.state));\r\n    }\r\n\r\n    shuffleArray = (friends) => {\r\n        const newArray = friends;\r\n        for (let i = newArray.length - 1; i > 0; i--) {\r\n            const j = Math.floor(Math.random() * (i + 1));\r\n            [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    duplicFriends = (friends) => {\r\n        const doubledFriends = friends.concat(friends).map((friend, index) => {\r\n            friend = {\r\n                ...friend,\r\n                id: index + 1\r\n            }\r\n            return friend\r\n        });\r\n        return doubledFriends\r\n    }\r\n\r\n    handleGuesses = () => {\r\n        if (this.state.guesses === 2 && (this.state.chosen[0].name === this.state.chosen[1].name)) {\r\n            this.setState({\r\n                friends: this.removeMatch(),\r\n                score: this.state.score + 1,\r\n                guesses: 0\r\n            },\r\n            () => $('#modal1').modal('open')\r\n            )\r\n        } else if (this.state.guesses === 2 && !(this.state.chosen[0].name === this.state.chosen[1].name)) {\r\n            this.setState({\r\n            wrong: this.state.wrong + 1,\r\n            guesses: 0,\r\n            chosen: [],\r\n            allDisabled: true\r\n            }, () => {\r\n            setTimeout(this.resetImgs, 3000)\r\n            })\r\n        }\r\n    }\r\n\r\n    removeMatch = () => {\r\n        // const remainingFriends = this.state.friends.filter(friend => friend.id !== this.state.chosen[0].id)\r\n        // .filter(friend => friend.id !== this.state.chosen[1].id);\r\n        const remainingFriends = this.state.friends.map((friend) => {\r\n            if ((friend.id === this.state.chosen[0].id) || (friend.id === this.state.chosen[1].id)) {\r\n                friend = {\r\n                    ...friend,\r\n                    matched: true\r\n                }\r\n            }\r\n            return friend\r\n        });\r\n        return remainingFriends\r\n    }\r\n\r\n    // copyFriends = () => {\r\n    //     const friendsCopy = friends;\r\n    //     return friendsCopy\r\n    // }\r\n\r\n    // shuffleFriends = () => {\r\n    //   // Filter this.state.friends for friends with an id not equal to the id being removed\r\n    //   const friends = this.randomizeFriends(this.state.friends);\r\n    //   // this.state.friends.filter(friend => friend.id !== id);\r\n    //   // Set this.state.friends equal to the new friends array\r\n    //   // this.setState({ score: this.state.score+1});\r\n    //   this.setState({ friends: friends },() => console.log(this.state.friends));\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            // eslint-disable-next-line react/react-in-jsx-scope\r\n            <MyContext.Provider \r\n                value = {{\r\n                    myGameState: this.state,\r\n                    cardClickHandler: (e,id) => {\r\n                        e.preventDefault();\r\n                        const friendIndex = this.state.friends.findIndex(friend => friend.id === id);\r\n                        const {\r\n                            name,\r\n                            image\r\n                        } = this.state.friends[friendIndex];\r\n                        console.log(friendIndex);\r\n                        this.setState({\r\n                                friends: this.state.friends.map((friend) => {\r\n                                    if (friend.id === id) {\r\n                                        friend = {\r\n                                            ...friend,\r\n                                            userSelected: true\r\n                                        }\r\n                                    }\r\n                                    return friend\r\n                                }),\r\n                                guesses: this.state.guesses + 1,\r\n                                chosen: this.state.chosen.concat({\r\n                                    id: id,\r\n                                    name: name,\r\n                                    image: image\r\n                                }),\r\n                                reset: false\r\n                            },\r\n                            () => {\r\n                                console.log(this.state);\r\n                                this.handleGuesses();\r\n                        });\r\n                    },\r\n                    startOver: (e) => {\r\n                        e.preventDefault();\r\n                        const origFriends = this.duplicFriends(friends); \r\n                        this.shakeImgs(() => this.setState({\r\n                            friends: this.shuffleArray(origFriends),\r\n                            score: 0,\r\n                            wrong: 0,\r\n                            guesses: 0,\r\n                            chosen: []\r\n                          },\r\n                          () => console.log(this.state.friends)));\r\n                    }\r\n                }}>{this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProvider;","import React, { Component } from \"react\";\r\n\r\nimport Header from \"./components/Header\";\r\nimport Footer from \"./components/Footer\";\r\nimport Wrapper from \"./components/Wrapper\";\r\n\r\nimport MyProvider from \"./components/Provider\";\r\n\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n  // Map over this.state.friends and render a FriendCard component for each friend object\r\n  render() {\r\n    return (\r\n      <MyProvider>\r\n        <div>\r\n          <Header>\r\n          </Header>\r\n          <Wrapper>\r\n          </Wrapper>\r\n          <Footer>Made with \r\n            <a className=\"orange-text text-lighten-3\" href=\"http://materializecss.com\"> Materialize\r\n            </a>\r\n          </Footer>\r\n        </div>\r\n      </MyProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}